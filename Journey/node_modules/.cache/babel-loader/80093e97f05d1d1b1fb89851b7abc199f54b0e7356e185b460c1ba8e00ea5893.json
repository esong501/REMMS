{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\y0501\\\\Documents\\\\Important_Stuff\\\\School_Stuff\\\\CS411\\\\REMMS\\\\Journey\\\\src\\\\components\\\\Home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport logo from './../../logo.svg';\nimport './Home.css';\nimport { useEffect, useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = ['Products', 'Pricing', 'Blog'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\nfunction ResponsiveAppBar() {\n  _s();\n  const [anchorElNav, setAnchorElNav] = useState(null);\n  const [anchorElUser, setAnchorElUser] = useState(null);\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Journey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'flex',\n              md: 'none'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"menu-appbar\",\n            anchorEl: anchorElNav,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left'\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'left'\n            },\n            open: Boolean(anchorElNav),\n            onClose: handleCloseNavMenu,\n            children: pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleCloseNavMenu,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                children: page\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AdbIcon, {\n          sx: {\n            display: {\n              xs: 'flex',\n              md: 'none'\n            },\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          noWrap: true,\n          component: \"a\",\n          href: \"\",\n          children: \"LOGO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseNavMenu,\n            sx: {\n              color: 'white'\n            },\n            children: page\n          }, page, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ResponsiveAppBar, \"QIsqpM/yGRL4/FzrSPXSWTpMbZs=\");\n_c = ResponsiveAppBar;\nexport default ResponsiveAppBar;\n// function Home() {\n//     const [message, setMessage] = useState(\"\");\n//     const [connected, setConnected] = useState(false);\n//     const [url, setUrl] = useState(\"\");\n//     const [lpost, setLpost] = useState(\"\");\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/message\")\n//         .then((res) => res.json())\n//         .then((data) => setMessage(data.message));\n//     }, []);\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/post\", { method: 'post' })\n//         .then((res) => setConnected(true));\n//     },[])\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/spotify\")\n//         .then((res) => res.json())\n//         .then((data) => setUrl(data.message));\n//     }, []);\n\n//     useEffect(() => {\n//         fetch(\"http://localhost:8080/locations\", { \n//             method: 'post', \n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({type:\"a\", params: \"b\"}) })\n//         .then((res) => res.json())\n//         .then((data) => setLpost(data.message));\n//     },[])\n\n//     return (\n//         <div>\n//             {console.log(connected)}\n//             {console.log(message)}\n//             <header className=\"App-header\">\n//             <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//             <p>\n//                 Edit <code>src/App.js</code> and save to reload.\n//             </p>\n//             <div>\n//             </div>\n//             <a\n//                 className=\"App-link\"\n//                 href={url}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//             >\n//                 {message}\n//             </a>\n//             <button onClick={() => {console.log(lpost)}}/>\n//             <div>\n//             </div>\n//             </header>\n//         </div>\n//       );\n// }\n\n//export default Home;\nvar _c;\n$RefreshReg$(_c, \"ResponsiveAppBar\");","map":{"version":3,"names":["logo","useEffect","useState","AppBar","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Avatar","Button","Tooltip","MenuItem","AdbIcon","pages","settings","ResponsiveAppBar","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleOpenNavMenu","event","currentTarget","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","flexGrow","display","xs","md","vertical","horizontal","Boolean","map","page","mr","color"],"sources":["C:/Users/y0501/Documents/Important_Stuff/School_Stuff/CS411/REMMS/Journey/src/components/Home/Home.js"],"sourcesContent":["import logo from './../../logo.svg';\r\nimport './Home.css';\r\nimport { useEffect, useState } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\n\r\nconst pages = ['Products', 'Pricing', 'Blog'];\r\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\r\n\r\nfunction ResponsiveAppBar() {\r\n  const [anchorElNav, setAnchorElNav] = useState(null);\r\n  const [anchorElUser, setAnchorElUser] = useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n          >\r\n            Journey\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            \r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{color: 'white'}}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default ResponsiveAppBar;\r\n// function Home() {\r\n//     const [message, setMessage] = useState(\"\");\r\n//     const [connected, setConnected] = useState(false);\r\n//     const [url, setUrl] = useState(\"\");\r\n//     const [lpost, setLpost] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n//         fetch(\"http://localhost:8080/message\")\r\n//         .then((res) => res.json())\r\n//         .then((data) => setMessage(data.message));\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         fetch(\"http://localhost:8080/post\", { method: 'post' })\r\n//         .then((res) => setConnected(true));\r\n//     },[])\r\n\r\n//     useEffect(() => {\r\n//         fetch(\"http://localhost:8080/spotify\")\r\n//         .then((res) => res.json())\r\n//         .then((data) => setUrl(data.message));\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         fetch(\"http://localhost:8080/locations\", { \r\n//             method: 'post', \r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({type:\"a\", params: \"b\"}) })\r\n//         .then((res) => res.json())\r\n//         .then((data) => setLpost(data.message));\r\n//     },[])\r\n\r\n//     return (\r\n//         <div>\r\n//             {console.log(connected)}\r\n//             {console.log(message)}\r\n//             <header className=\"App-header\">\r\n//             <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//             <p>\r\n//                 Edit <code>src/App.js</code> and save to reload.\r\n//             </p>\r\n//             <div>\r\n//             </div>\r\n//             <a\r\n//                 className=\"App-link\"\r\n//                 href={url}\r\n//                 target=\"_blank\"\r\n//                 rel=\"noopener noreferrer\"\r\n//             >\r\n//                 {message}\r\n//             </a>\r\n//             <button onClick={() => {console.log(lpost)}}/>\r\n//             <div>\r\n//             </div>\r\n//             </header>\r\n//         </div>\r\n//       );\r\n// }\r\n    \r\n//export default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}