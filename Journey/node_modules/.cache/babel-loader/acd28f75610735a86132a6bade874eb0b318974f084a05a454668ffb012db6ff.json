{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\y0501\\\\Documents\\\\Important_Stuff\\\\School_Stuff\\\\CS411\\\\REMMS\\\\src\\\\components\\\\LocationSearch\\\\LocationSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTokenFromUrl } from '../../App';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\nconst LocationSearch = () => {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(\"\");\n  useEffect(() => {\n    // console.log(\"token derived: \", getTokenFromUrl())\n    const _spotifyToken = getTokenFromUrl().access_token;\n    window.location.hash = \"\";\n\n    // console.log(\"SPOTIFY TOKEN \", _spotifyToken)\n\n    if (_spotifyToken) {\n      setSpotifyToken(_spotifyToken);\n      spotify.setAccessToken(_spotifyToken);\n      spotify.getMe().then(user => {\n        console.log(user);\n      });\n    }\n  });\n  const [searchInput, setSearchInput] = useState(\"\");\n  const countries = [{\n    name: \"Belgium\",\n    continent: \"Europe\"\n  }, {\n    name: \"India\",\n    continent: \"Asia\"\n  }, {\n    name: \"Bolivia\",\n    continent: \"South America\"\n  }, {\n    name: \"Ghana\",\n    continent: \"Africa\"\n  }, {\n    name: \"Japan\",\n    continent: \"Asia\"\n  }, {\n    name: \"Canada\",\n    continent: \"North America\"\n  }, {\n    name: \"New Zealand\",\n    continent: \"Australasia\"\n  }, {\n    name: \"Italy\",\n    continent: \"Europe\"\n  }, {\n    name: \"South Africa\",\n    continent: \"Africa\"\n  }, {\n    name: \"China\",\n    continent: \"Asia\"\n  }, {\n    name: \"Paraguay\",\n    continent: \"South America\"\n  }, {\n    name: \"Usa\",\n    continent: \"North America\"\n  }, {\n    name: \"France\",\n    continent: \"Europe\"\n  }, {\n    name: \"Botswana\",\n    continent: \"Africa\"\n  }, {\n    name: \"Spain\",\n    continent: \"Europe\"\n  }, {\n    name: \"Senegal\",\n    continent: \"Africa\"\n  }, {\n    name: \"Brazil\",\n    continent: \"South America\"\n  }, {\n    name: \"Denmark\",\n    continent: \"Europe\"\n  }, {\n    name: \"Mexico\",\n    continent: \"South America\"\n  }, {\n    name: \"Australia\",\n    continent: \"Australasia\"\n  }, {\n    name: \"Tanzania\",\n    continent: \"Africa\"\n  }, {\n    name: \"Bangladesh\",\n    continent: \"Asia\"\n  }, {\n    name: \"Portugal\",\n    continent: \"Europe\"\n  }, {\n    name: \"Pakistan\",\n    continent: \"Asia\"\n  }];\n  const handleChange = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  };\n\n  // const filteredData = countries.filter((el) => {\n  //   //if no input the return the original\n  //   if (searchInput === '') {\n  //       return el;\n  //   }\n  //   //return the item which contains the user input\n  //   else {\n  //       return el.name.toLowerCase().includes(searchInput)\n  //   }\n  // })\n\n  const data = () => {\n    if (searchInput === '') {\n      return spotify.getMyCurrentPlayingTrack().then(cplay => {\n        return [cplay.item];\n      });\n    } else {\n      return spotify.search(searchInput, [\"track\"]).then(query => {\n        return query.tracks.items;\n      });\n    }\n  };\n  const filteredData = [data];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search here\",\n      onChange: handleChange,\n      value: searchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Continent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), filteredData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationSearch, \"hOqfcr/EidBCEmoM5hs76FBk+nE=\");\n_c = LocationSearch;\nexport default LocationSearch;\nvar _c;\n$RefreshReg$(_c, \"LocationSearch\");","map":{"version":3,"names":["React","useEffect","useState","getTokenFromUrl","SpotifyWebApi","spotify","LocationSearch","spotifyToken","setSpotifyToken","_spotifyToken","access_token","window","location","hash","setAccessToken","getMe","then","user","console","log","searchInput","setSearchInput","countries","name","continent","handleChange","e","preventDefault","target","value","data","getMyCurrentPlayingTrack","cplay","item","search","query","tracks","items","filteredData","map"],"sources":["C:/Users/y0501/Documents/Important_Stuff/School_Stuff/CS411/REMMS/src/components/LocationSearch/LocationSearch.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { getTokenFromUrl } from '../../App';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\n\r\n\r\nconst LocationSearch = () => {\r\n\r\n  const [spotifyToken, setSpotifyToken] = useState(\"\")\r\n\r\n  useEffect(()=>{\r\n    // console.log(\"token derived: \", getTokenFromUrl())\r\n    const _spotifyToken = getTokenFromUrl().access_token;\r\n    window.location.hash = \"\";\r\n\r\n    // console.log(\"SPOTIFY TOKEN \", _spotifyToken)\r\n\r\n    if (_spotifyToken){\r\n      setSpotifyToken(_spotifyToken)\r\n\r\n      spotify.setAccessToken(_spotifyToken)\r\n\r\n      spotify.getMe().then((user)=>{\r\n        console.log(user)\r\n      });\r\n    }\r\n  })\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  const countries = [\r\n\r\n      { name: \"Belgium\", continent: \"Europe\" },\r\n      { name: \"India\", continent: \"Asia\" },\r\n      { name: \"Bolivia\", continent: \"South America\" },\r\n      { name: \"Ghana\", continent: \"Africa\" },\r\n      { name: \"Japan\", continent: \"Asia\" },\r\n      { name: \"Canada\", continent: \"North America\" },\r\n      { name: \"New Zealand\", continent: \"Australasia\" },\r\n      { name: \"Italy\", continent: \"Europe\" },\r\n      { name: \"South Africa\", continent: \"Africa\" },\r\n      { name: \"China\", continent: \"Asia\" },\r\n      { name: \"Paraguay\", continent: \"South America\" },\r\n      { name: \"Usa\", continent: \"North America\" },\r\n      { name: \"France\", continent: \"Europe\" },\r\n      { name: \"Botswana\", continent: \"Africa\" },\r\n      { name: \"Spain\", continent: \"Europe\" },\r\n      { name: \"Senegal\", continent: \"Africa\" },\r\n      { name: \"Brazil\", continent: \"South America\" },\r\n      { name: \"Denmark\", continent: \"Europe\" },\r\n      { name: \"Mexico\", continent: \"South America\" },\r\n      { name: \"Australia\", continent: \"Australasia\" },\r\n      { name: \"Tanzania\", continent: \"Africa\" },\r\n      { name: \"Bangladesh\", continent: \"Asia\" },\r\n      { name: \"Portugal\", continent: \"Europe\" },\r\n      { name: \"Pakistan\", continent:\"Asia\" } \r\n    ];\r\n    \r\n    const handleChange = (e) => {\r\n      e.preventDefault();\r\n      setSearchInput(e.target.value);\r\n    };\r\n    \r\n    // const filteredData = countries.filter((el) => {\r\n    //   //if no input the return the original\r\n    //   if (searchInput === '') {\r\n    //       return el;\r\n    //   }\r\n    //   //return the item which contains the user input\r\n    //   else {\r\n    //       return el.name.toLowerCase().includes(searchInput)\r\n    //   }\r\n    // })\r\n\r\n    const data = () => {\r\n      if (searchInput === ''){\r\n        return spotify.getMyCurrentPlayingTrack().then((cplay) => {\r\n          return [cplay.item];\r\n        });\r\n      }\r\n      else{\r\n        return spotify.search(searchInput, [\"track\"]).then((query)=>{\r\n          return query.tracks.items;\r\n        });\r\n      }\r\n    }\r\n\r\n    const filteredData = [data]\r\n    \r\n    return (\r\n    <div>\r\n      <input\r\n          type=\"search\"\r\n          placeholder=\"Search here\"\r\n          onChange={handleChange}\r\n          value={searchInput} />\r\n      {/* {console.log(spotify.getMe())} */}\r\n      <table>\r\n        <tr>\r\n          <th>Country</th>\r\n          <th>Continent</th>\r\n        </tr>\r\n      \r\n        {filteredData.map((item) => (\r\n                <li key={item.name}>{item.name}</li>\r\n            ))}\r\n      </table>\r\n    </div>\r\n    )\r\n      \r\n      \r\n};\r\n\r\nexport default LocationSearch;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}