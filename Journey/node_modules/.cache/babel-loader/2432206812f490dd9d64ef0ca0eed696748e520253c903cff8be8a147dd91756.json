{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\y0501\\\\Documents\\\\Important_Stuff\\\\School_Stuff\\\\CS411\\\\REMMS\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Buffer } from 'buffer';\nimport { Routes, Route } from 'react-router-dom';\nimport LocationSearch from './components/LocationSearch/LocationSearch';\nimport Home from './components/Home/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"http://localhost:3000/location\";\nconst clientId = process.env.REACT_APP_CLIENT_ID;\nconst scopes = [\"user-read-currently-playing\"];\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\nexport const getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n    let parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nfunction App() {\n  // var title = process.env.REACT_APP_TITLE\n  // var client_id = process.env.REACT_APP_CLIENT_ID;\n  // var client_secret = process.env.REACT_APP_CLIENT_SECRET;\n  // var url = process.env.REACT_APP_URL\n\n  // var authOptions = {\n  //   grant_type: \"client_credentials\"\n  // };\n\n  // // request.post(authOptions, function(error, response, body) {\n  // //   if (!error && response.statusCode === 200) {\n  // //     var token = body.access_token;\n  // //   }\n  // // });\n\n  // const requestOptions = {\n  //   method: 'POST',\n  //   headers: {\n  //     \"Authorization\": 'Basic ' + (Buffer(client_id + ':' + client_secret).toString('base64')),\n  //     \"Content-Type\": title + '/' + (Buffer(\"http://localhost:3000\").toString('base64'))\n  //   },\n  //   body: JSON.stringify(authOptions)\n  // };\n\n  // console.log(requestOptions)\n\n  // fetch('https://accounts.spotify.com/api/token', requestOptions)\n  //     .then(response => response.json())\n  //     .then(data => console.log({ postId: data.id }));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/location\",\n        element: /*#__PURE__*/_jsxDEV(LocationSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Buffer","Routes","Route","LocationSearch","Home","authEndpoint","redirectUri","clientId","process","env","REACT_APP_CLIENT_ID","scopes","loginUrl","join","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","App"],"sources":["C:/Users/y0501/Documents/Important_Stuff/School_Stuff/CS411/REMMS/src/App.js"],"sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Buffer } from 'buffer';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport LocationSearch from './components/LocationSearch/LocationSearch';\r\nimport Home from './components/Home/Home';\r\n\r\nconst authEndpoint = \"https://accounts.spotify.com/authorize\"\r\n\r\nconst redirectUri = \"http://localhost:3000/location\"\r\n\r\nconst clientId = process.env.REACT_APP_CLIENT_ID\r\n\r\nconst scopes = [\"user-read-currently-playing\"]\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`\r\n\r\nexport const getTokenFromUrl = ()=>{\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((initial,item)=>{\r\n      let parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1])\r\n\r\n      return initial\r\n    }, {})\r\n}\r\n\r\nfunction App() {\r\n\r\n  // var title = process.env.REACT_APP_TITLE\r\n  // var client_id = process.env.REACT_APP_CLIENT_ID;\r\n  // var client_secret = process.env.REACT_APP_CLIENT_SECRET;\r\n  // var url = process.env.REACT_APP_URL\r\n\r\n  // var authOptions = {\r\n  //   grant_type: \"client_credentials\"\r\n  // };\r\n\r\n  // // request.post(authOptions, function(error, response, body) {\r\n  // //   if (!error && response.statusCode === 200) {\r\n  // //     var token = body.access_token;\r\n  // //   }\r\n  // // });\r\n\r\n  // const requestOptions = {\r\n  //   method: 'POST',\r\n  //   headers: {\r\n  //     \"Authorization\": 'Basic ' + (Buffer(client_id + ':' + client_secret).toString('base64')),\r\n  //     \"Content-Type\": title + '/' + (Buffer(\"http://localhost:3000\").toString('base64'))\r\n  //   },\r\n  //   body: JSON.stringify(authOptions)\r\n  // };\r\n\r\n  // console.log(requestOptions)\r\n\r\n  // fetch('https://accounts.spotify.com/api/token', requestOptions)\r\n  //     .then(response => response.json())\r\n  //     .then(data => console.log({ postId: data.id }));\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        {/* {console.log(process.env.REACT_APP_TITLE)} */}\r\n        <Route path=\"/\" element={<Home/>}/>\r\n        <Route path=\"/location\" element={<LocationSearch/>} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,cAAc,MAAM,4CAA4C;AACvE,OAAOC,IAAI,MAAM,wBAAwB;AAAC;AAE1C,MAAMC,YAAY,GAAG,wCAAwC;AAE7D,MAAMC,WAAW,GAAG,gCAAgC;AAEpD,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;AAEhD,MAAMC,MAAM,GAAG,CAAC,6BAA6B,CAAC;AAE9C,OAAO,MAAMC,QAAQ,GAAI,GAAEP,YAAa,cAAaE,QAAS,iBAAgBD,WAAY,UAASK,MAAM,CAACE,IAAI,CAAC,KAAK,CAAE,uCAAsC;AAE5J,OAAO,MAAMC,eAAe,GAAG,MAAI;EACjC,OAAOC,MAAM,CAACC,QAAQ,CAACC,IAAI,CACxBC,SAAS,CAAC,CAAC,CAAC,CACZC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,CAACC,OAAO,EAACC,IAAI,KAAG;IACtB,IAAIC,KAAK,GAAGD,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;IAC3BE,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;IAEhD,OAAOF,OAAO;EAChB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AAED,SAASI,GAAG,GAAG;EAEb;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAGA,oBACE;IAAA,uBACE,QAAC,MAAM;MAAA,wBAEL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE,eACnC,QAAC,KAAK;QAAC,IAAI,EAAC,WAAW;QAAC,OAAO,eAAE,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAC/C;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,KA1CQA,GAAG;AA4CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}